on:
  release:
    types: [released]

jobs:
  build:
    runs-on: ubuntu-latest
    needs: check_version
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - run: curl -sSL https://install.python-poetry.org | python3 -
    - name: Check release version consistency
      run: |
        TAG = "${GITHUB_REF##*/}"
        VERSION = $(poetry version -s)
        if [[ "$TAG" != "v$VERSION" ]]; then
          echo "Version mismatch !!" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
    - run: poetry build
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
  test_deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: test
      url: https://test.pypi.org/project/pathlibfs
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    - name: Publish to test PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
  production_deploy:
    needs: test_deploy
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pypi.org/project/pathlibfs
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
